{{- if .Values.initvault.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "vault.fullname" . }}-config-job
  labels:
    app: {{ include "vault.name" . }}-config-job
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: vault-config-job
  annotations:
    "helm.sh/hook": "post-install"
    # "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-config-job
        release: {{ .Release.Name }}
{{- if .Values.initvault.job.podLabels }}
{{ toYaml .Values.initvault.job.podLabels | indent 8 }}
{{- end }}
{{- if .Values.initvault.job.podAnnotations }}
      annotations:
{{ toYaml .Values.initvault.job.podAnnotations | indent 8 }}
{{- end }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ .Values.initvault.sa.name }}-sa
      containers:
      - name: vault-config-install
        image: {{ .Values.vault.server.image.repository }}:{{ .Values.vault.server.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        command: ["sh", "/tmp/vault-config.sh"]
        volumeMounts:
        - name: vault-config-sh
          mountPath: /tmp/vault-config.sh
          subPath: vault-config.sh
        env:
        - name: VAULT_ADDR
          value: http://vault.tooling.svc:8200
      terminationGracePeriodSeconds: 0
      volumes:
      - name: vault-config-sh
        configMap:
          name: vault-config-sh
          defaultMode: 0777
  backoffLimit: 5
  completions: 1
  parallelism: 1
  {{- end }}